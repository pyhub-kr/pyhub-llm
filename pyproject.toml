[project]
name = "pyhub-llm"
version = "0.1.0"
description = "Standalone LLM library with support for multiple providers"
authors = [{name = "PyHub Team", email = "team@pyhub.dev"}]
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
keywords = ["llm", "ai", "openai", "anthropic", "langchain"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "httpx>=0.24.0",
    "pydantic>=2.0.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
    "python-dotenv>=1.0.0",
    "jinja2>=3.1.0",
    "toml>=0.10.0",
    "aiofiles>=23.0.0",
]

[project.optional-dependencies]
openai = ["openai>=1.0.0"]
anthropic = ["anthropic>=0.18.0"]
google = ["google-generativeai>=0.4.0"]
ollama = ["ollama>=0.1.0"]
all = [
    "openai>=1.0.0",
    "anthropic>=0.18.0", 
    "google-generativeai>=0.4.0",
    "ollama>=0.1.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/pyhub/pyhub-llm"
Documentation = "https://pyhub-llm.readthedocs.io"
Repository = "https://github.com/pyhub/pyhub-llm"
Issues = "https://github.com/pyhub/pyhub-llm/issues"

[project.scripts]
pyhub-llm = "pyhub.llm.cli:app"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/pyhub"]

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.black]
line-length = 120
target-version = ["py38"]

[tool.ruff]
line-length = 120
target-version = "py38"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true